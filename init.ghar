(set defmacro (macro (name args . body)
	'(set ,name (macro ,args . @body))))

(defmacro defn (name args . body)
	'(set ,name (lambda ,args . @body)))

(defmacro alias (old-name new-name)
	'(defmacro ,new-name args
		(cons ,old-name args)))

(alias set defvar)

(defmacro if (test true false)
	'(cond (,test ,true) (t ,false)))

(defmacro begin terms
	'(let () . @terms))

(alias begin progn)

(set f nil)

(set else t)

(set *PATH* (string-split PATH ":"))

(setenv HOSTNAME (car ($ (hostname))))

(defn cd path
	(let ([result (apply --cd path)])
		(setenv PWD (car ($ (pwd))))
		result))

(defn *prompt* ()
	(string-append USER "@" HOSTNAME ":" PWD "$ "))

# load user's gharialrc file if it exists
(let ([rc (string-append HOME "/.gharialrc")])
	(if (test '-f rc)
		(load rc)
		nil))

